<UserControl x:Class="Pergamon.FormattingSubmenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Pergamon"
             mc:Ignorable="d" 
             d:DesignHeight="60" 
             d:DesignWidth="650" Name="control">

    <!--Formatting submenu-->
    <StackPanel
            Orientation="Horizontal"
            Grid.Row="0"
            >

        <StackPanel.InputBindings>
            <MouseBinding MouseAction="LeftClick" Command="{Binding HideOptionsCommand}"/>
        </StackPanel.InputBindings>

        <!--Font options-->
        <StackPanel
                Orientation="Horizontal"
                >

            <!--Selected font-->
            <ComboBox
                    FontWeight="Normal"
                    ItemsSource="{Binding FontFamilies}"
                    SelectedItem="{Binding SelectedFontFamily}"
                    IsEditable="True"
                    >
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                                VirtualizingPanel.ScrollUnit="Pixel"
                                />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Label 
                            Content="{Binding}"
                            FontFamily="{Binding}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!--Font size-->
            <ComboBox 
                    IsEditable="True"
                    SelectedItem="{Binding SelectedFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding FontSizes}">

            </ComboBox>

        </StackPanel>

        <!--Separator-->
        <Border 
                Style="{StaticResource Separator}"
                Grid.Column="1"
                Background="{Binding Foreground, ElementName=firstIcon}"
                />

        <!--Text edit options-->
        <StackPanel 
                Name="textEditSection"
                Orientation="Horizontal">

            <!--Bold-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Name="firstIcon"
                    Content="{StaticResource FontAwesomeBald}"
                    ToolTip="Bold"
                    Foreground="{StaticResource DefaultTabForegroundColorBrush}"
                    Command="EditingCommands.ToggleBold"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsBoldChecked}"
                    />

            <!--Italic-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeItalic}"
                    ToolTip="Italic"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    Command="EditingCommands.ToggleItalic"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsItalicChecked}"
                />

            <!--Underline-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeUnderLine}"
                    ToolTip="Underline"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    Command="EditingCommands.ToggleUnderline"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsUnderlineChecked}"
                            />

            
            <!--Marker-->
            <StackPanel 
                    Orientation="Vertical"
                    Margin="8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ToolTip="Marker"
                    >

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ToggleButton
                        Grid.Column="0"
                        Name="marker"
                        Style="{StaticResource PressableIconButton}"
                        Content="{StaticResource FontAwesomeMarker}"
                        Margin="0"
                        IsChecked="{Binding IsMarkersColorPickerChecked}"
                        Foreground="{Binding Foreground, ElementName=firstIcon}"
                        Command="{Binding ApplyMarkerColorCommand}"
                        />

                    <Button 
                            Grid.Column="1"
                            Margin="0"
                            Padding="2"
                            Style="{StaticResource IconButton}"
                            Command="{Binding ShowMarkerColorPickerCommand}"
                                >
                        <Button.Content>
                            <Path 
                                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                    HorizontalAlignment="Center" Fill="{StaticResource DefaultTabForegroundColorBrush}">
                            </Path>
                        </Button.Content>
                    </Button>
                </Grid>

                <Border 
                        Height="4"
                        Background="{Binding SelectedMarkerColor}"
                        />
            </StackPanel>
            <!--Marker color picker popup-->
            <Popup 
                Name="popup"
                IsOpen="{Binding IsMarkerColorPickerVisible}"
                PlacementTarget="{x:Reference Name=marker}"
                Placement="Bottom"
                StaysOpen="False"
                PopupAnimation="Slide"
                AllowsTransparency="True"
                VerticalOffset="10"
                >

                <!--Color picker control-->
                <local:ColorPicker
                            DataContext="{Binding ColorPickerVM}"
                            Padding="8"/>
            </Popup>

            <!--Font color-->
            <StackPanel 
                    Orientation="Vertical"
                    Margin="8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ToolTip="Font color"
                    >

                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!--Apply font color button-->
                    <ToggleButton
                        Grid.Column="0"
                        Name="font"
                        Style="{StaticResource PressableIconButton}"
                        Content="{StaticResource FontAwesomeFont}"
                        Margin="0"
                        IsChecked="{Binding IsFontColorPickerChecked}"
                        Foreground="{Binding Foreground, ElementName=firstIcon}"
                        Command="{Binding ApplyFontColorCommand}"
                        />

                    <!--Show font color picker-->
                    <Button 
                            Grid.Column="1"
                            Margin="0"
                            Padding="2"
                            Style="{StaticResource IconButton}"
                            Command="{Binding ShowFontColorPickerCommand}">
                        
                        <Button.Content>
                            <Path 
                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                HorizontalAlignment="Center" Fill="{StaticResource DefaultTabForegroundColorBrush}">
                            </Path>
                        </Button.Content>
                    </Button>
                </Grid>

                <Border 
                        Height="4"
                        Background="{Binding SelectedFontColor}"
                        />
            </StackPanel>
            <!--Font color picker popup-->
            <Popup 
                IsOpen="{Binding IsFontColorPickerVisible}"
                PlacementTarget="{x:Reference Name=font}"
                Placement="Bottom"
                StaysOpen="False"
                PopupAnimation="Slide"
                AllowsTransparency="True"
                VerticalOffset="10"
                >

                <!--Color picker control-->
                <local:ColorPicker
                            DataContext="{Binding ColorPickerVM}"
                            Padding="8"/>
            </Popup>
            
            <!--Additional options dropdown-->
            <Button 
                    Name="additionalOptionsButton"
                    Style="{StaticResource IconButton}"
                    Command="{Binding ShowAdditionalOptionsCommand}"
                        >
                <Button.Content>
                    <Path 
                            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                            HorizontalAlignment="Center" Fill="{StaticResource DefaultTabForegroundColorBrush}">

                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                        </Path.RenderTransform>
                    </Path>
                </Button.Content>
            </Button>
            <Popup 
                    IsOpen="{Binding IsAdditionalOptionVisible}"
                    PlacementTarget="{x:Reference Name=additionalOptionsButton}"
                    Placement="Bottom"
                    StaysOpen="False"
                    PopupAnimation="Slide"
                    AllowsTransparency="True"
                    VerticalOffset="10"
                    >

                <StackPanel Orientation="Vertical"
                                Background="{StaticResource DefaultTabBackgroundColorBrush}">

                    <!--Lower index-->
                    <ToggleButton 
                            Style="{StaticResource PressableIconButton}"
                            Padding="8"
                            IsChecked="{Binding IsSubscriptChecked}"
                            Command="EditingCommands.ToggleSubscript"
                            CommandTarget="{Binding ActionTarget, ElementName=control}"
                            Content="{StaticResource FontAwesomeLowerIndex}"/>

                    <!--Upper index-->
                    <ToggleButton
                            Style="{StaticResource PressableIconButton}"
                            Padding="8"
                            IsChecked="{Binding IsSuperscriptChecked}"
                            Command="EditingCommands.ToggleSuperscript"
                            CommandTarget="{Binding ActionTarget, ElementName=control}"
                            Content="{StaticResource FontAwesomeUpperIndex}"/>


                </StackPanel>
            </Popup>

        </StackPanel>

        <!--Separator-->
        <Border 
                Style="{StaticResource Separator}"
                Grid.Column="1"
                Background="{Binding Foreground, ElementName=firstIcon}"
                />

        <!--Aligment-->
        <StackPanel 
                Name="aligmentSection"
                Orientation="Horizontal">

            <!--Align left-->
            <ToggleButton 
                    x:Name="alignLeftButton"
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeAlignLeft}"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    ToolTip="Align to left"
                    Command="EditingCommands.AlignLeft"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsLeftAlignChecked}"
                    />

            <!--Align right-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeAlignRight}"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    ToolTip="Align to right"
                    Command="EditingCommands.AlignRight"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsRightAlignChecked}"
                            />

            <!--Align center-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeAlignCenter}"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    ToolTip="Align to center"
                    Command="EditingCommands.AlignCenter"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsCenterAlignChecked}"
                />

            <!--Justify-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    Content="{StaticResource FontAwesomeAlignJustify}"
                    ToolTip="Justify"
                    Command="EditingCommands.AlignJustify"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsJustifyChecked}"
                    />


            <!--Additional aligment options-->
            <Button 
                    Name="additionalAlignOptionsButton"
                    Style="{StaticResource IconButton}"
                    Command="{Binding ShowAdditionalAlignOptionsCommand}">

                <Button.Content>
                    <Path 
                            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                            HorizontalAlignment="Center" Fill="{StaticResource DefaultTabForegroundColorBrush}">

                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                        </Path.RenderTransform>
                    </Path>
                </Button.Content>
            </Button>

            <Popup IsOpen="{Binding IsAdditionalAlignOptionVisible}"
                        PlacementTarget="{x:Reference Name=additionalAlignOptionsButton}"
                        Placement="Bottom"
                        StaysOpen="False"
                        PopupAnimation="Slide"
                        AllowsTransparency="True"
                        VerticalOffset="10"
                        >

                <Grid
                        Background="{StaticResource DefaultTabBackgroundColorBrush}"
                        >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Indent/Outdent buttons-->
                    <StackPanel 
                            Orientation="Horizontal" 
                            Grid.Row="0"
                                >

                        <!--Indent-->
                        <Button
                                Style="{StaticResource IconButton}"
                                Padding="8"
                                Command="EditingCommands.IncreaseIndentation"
                                CommandTarget="{Binding ActionTarget, ElementName=control}"
                                Content="{StaticResource FontAwesomeIndent}"/>

                        <!--Outdent-->
                        <Button
                                Style="{StaticResource IconButton}"
                                Padding="8"
                                Command="EditingCommands.DecreaseIndentation"
                                CommandTarget="{Binding ActionTarget, ElementName=control}"
                                Content="{StaticResource FontAwesomeOutdent}"/>

                    </StackPanel>

                    <StackPanel Orientation="Vertical"
                                    Grid.Row="1">

                        <!--Spacing label-->
                        <Label Content="Line spacing"
                                    HorizontalAlignment="Center"/>

                        <!--Spacing-->
                        <ComboBox
                                IsEditable="True"
                                SelectedIndex="0"
                                SelectedItem="{Binding SelectedSpacing}"
                                ItemsSource="{Binding SpacingOptions}"
                                >
                        </ComboBox>

                    </StackPanel>

                </Grid>
            </Popup>
        </StackPanel>

        <!--Separator-->
        <Border 
                Style="{StaticResource Separator}"
                Grid.Column="1"
                Background="{Binding Foreground, ElementName=firstIcon}"
                />

        <!--Lists-->
        <StackPanel 
                Name="listsSection"
                Orientation="Horizontal">

            <!--Bullets-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeDotedList}"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    ToolTip="Dotted list"
                    Command="EditingCommands.ToggleBullets"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsDottedListChecked}"
                    />

            <!--Numeric list-->
            <ToggleButton 
                    Style="{StaticResource PressableIconButton}"
                    Content="{StaticResource FontAwesomeNumberList}"
                    Foreground="{Binding Foreground, ElementName=firstIcon}"
                    ToolTip="Numeric list"
                    Command="EditingCommands.ToggleNumbering"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    IsChecked="{Binding IsNumericListChecked}"
                    />

        </StackPanel>

    </StackPanel>

</UserControl>
