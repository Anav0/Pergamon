<UserControl x:Class="Pergamon.FormattingSubmenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Pergamon"
             mc:Ignorable="d" 
             d:DesignHeight="48" 
             d:DesignWidth="650" 
             Name="control"
             Background="{StaticResource DefaultTabBackgroundColorBrush}"
             >

    <!--Formatting submenu-->
    <StackPanel
            Orientation="Horizontal"
            Grid.Row="0"
            >

        <!--Selected font-->
        <ComboBox
            ItemsSource="{Binding FontFamilies}"
            SelectedItem="{Binding SelectedFontFamily}"
            IsEditable="True"
            >
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                                VirtualizingPanel.ScrollUnit="Pixel"
                                />
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Label 
                            Content="{Binding}"
                            FontFamily="{Binding}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <!--Font size-->
        <ComboBox 
            IsEditable="True"
            SelectedItem="{Binding SelectedFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding FontSizes}"/>

        <!--Separator-->
        <Border 
            Style="{StaticResource Separator}"
            Grid.Column="1"
            Background="{Binding Foreground, ElementName=firstIcon}"
            />

        <!--Bold-->
        <Button 
            Style="{StaticResource IconButton}"
            Name="firstIcon"
            Content="{StaticResource FontAwesomeBald}"
            ToolTip="Bold"
            Foreground="{StaticResource DefaultTabForegroundColorBrush}"
            Command="EditingCommands.ToggleBold"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

        <!--Italic-->
        <Button 
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeItalic}"
            ToolTip="Italic"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            Command="EditingCommands.ToggleItalic"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
        />

        <!--Underline-->
        <Button 
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeUnderLine}"
            ToolTip="Underline"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            Command="EditingCommands.ToggleUnderline"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
                    />

        <!--Marker-->
        <Grid Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Apply marker color button-->
            <Button
                Grid.Column="0"
                Name="marker"
                Style="{StaticResource IconButton}"
                Content="{StaticResource FontAwesomeMarker}"
                Margin="0"
                Foreground="{Binding Foreground, ElementName=firstIcon}"
                Command="{Binding ApplyMarkerColorCommand}"
                CommandParameter="{Binding ActionTarget, ElementName=control}"
                />

            <!--expand color list-->
            <Button 
                Grid.Column="1"
                Margin="0"
                Padding="2"
                Style="{StaticResource IconButton}"
                Command="{Binding ShowMarkerColorPickerCommand}"
                    >
                <Button.Content>
                    <Path 
                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                        HorizontalAlignment="Center" 
                        Fill="{StaticResource DefaultTabForegroundColorBrush}">
                    </Path>
                </Button.Content>
            </Button>

            <!--Marker color-->
            <Border 
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Height="4"
                Background="{Binding SelectedMarkerColor}"
                />

        </Grid>

        <!--Marker color picker popup-->
        <Popup 
            Name="popup"
            IsOpen="{Binding IsMarkerColorPickerVisible}"
            PlacementTarget="{x:Reference Name=marker}"
            Placement="Bottom"
            StaysOpen="False"
            PopupAnimation="Slide"
            AllowsTransparency="True"
            VerticalOffset="10"
            >

            <!--Color picker control-->
            <local:ColorPicker
                    DataContext="{Binding ColorPickerVM}"
                    Padding="8"/>
        </Popup>

        <!--Font color selector-->
        <Grid Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Apply font color button-->
            <Button
                Grid.Column="0"
                Name="font"
                Style="{StaticResource IconButton}"
                Content="{StaticResource FontAwesomeFont}"
                Margin="0"
                Foreground="{Binding Foreground, ElementName=firstIcon}"
                Command="{Binding ApplyFontColorCommand}"
                CommandParameter="{Binding ActionTarget, ElementName=control}"
                />

            <!--Show font color picker-->
            <Button 
                Grid.Column="1"
                Margin="0"
                Padding="2"
                Style="{StaticResource IconButton}"
                Command="{Binding ShowFontColorPickerCommand}">

                <Button.Content>
                    <Path 
                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                        HorizontalAlignment="Center" 
                        Fill="{StaticResource DefaultTabForegroundColorBrush}">
                        
                    </Path>
                </Button.Content>
            </Button>

            <!--Selected font color-->
            <Border 
                Grid.Row="2"
                Grid.ColumnSpan="2"
                Height="4"
                Background="{Binding SelectedFontColor}"
                />
        </Grid>

        <!--Font color picker popup-->
        <Popup 
            IsOpen="{Binding IsFontColorPickerVisible}"
            PlacementTarget="{x:Reference Name=font}"
            Placement="Bottom"
            StaysOpen="False"
            PopupAnimation="Slide"
            AllowsTransparency="True"
            VerticalOffset="10"
            >

            <!--Color picker control-->
            <local:ColorPicker
                    DataContext="{Binding ColorPickerVM}"
                    Padding="8"/>
        </Popup>

        <!--Additional options dropdown-->
        <Button 
            Name="additionalOptionsButton"
            Style="{StaticResource IconButton}"
            Command="{Binding ShowAdditionalOptionsCommand}"
            >
            
            <Button.Content>
                <Path 
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    HorizontalAlignment="Center" Fill="{StaticResource DefaultTabForegroundColorBrush}">

                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                    </Path.RenderTransform>
                </Path>
            </Button.Content>
        </Button>
        <Popup 
            IsOpen="{Binding IsAdditionalOptionVisible}"
            PlacementTarget="{x:Reference Name=additionalOptionsButton}"
            Placement="Bottom"
            StaysOpen="False"
            PopupAnimation="Slide"
            AllowsTransparency="True"
            VerticalOffset="10"
            >

            <StackPanel Orientation="Vertical"
                        Background="{StaticResource DefaultTabBackgroundColorBrush}">

                <!--Lower index-->
                <Button 
                    Style="{StaticResource IconButton}"
                    Padding="8"
                    Command="EditingCommands.ToggleSubscript"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    Content="{StaticResource FontAwesomeLowerIndex}"/>

                <!--Upper index-->
                <Button
                    Style="{StaticResource IconButton}"
                    Padding="8"
                    Command="EditingCommands.ToggleSuperscript"
                    CommandTarget="{Binding ActionTarget, ElementName=control}"
                    Content="{StaticResource FontAwesomeUpperIndex}"/>


            </StackPanel>
        </Popup>

        <!--Separator-->
        <Border 
                Style="{StaticResource Separator}"
                Grid.Column="1"
                Background="{Binding Foreground, ElementName=firstIcon}"
                />

        <!--Align left-->
        <Button 
            x:Name="alignLeftButton"
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeAlignLeft}"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            ToolTip="Align to left"
            Command="EditingCommands.AlignLeft"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

        <!--Align right-->
        <Button 
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeAlignRight}"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            ToolTip="Align to right"
            Command="EditingCommands.AlignRight"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

        <!--Align center-->
        <Button 
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeAlignCenter}"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            ToolTip="Align to center"
            Command="EditingCommands.AlignCenter"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

        <!--Justify-->
        <Button 
            Style="{StaticResource IconButton}"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            Content="{StaticResource FontAwesomeAlignJustify}"
            ToolTip="Justify"
            Command="EditingCommands.AlignJustify"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

        <!--Additional aligment options-->
        <Button 
            Name="additionalAlignOptionsButton"
            Style="{StaticResource IconButton}"
            Command="{Binding ShowAdditionalAlignOptionsCommand}">

            <Button.Content>
                <Path 
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    HorizontalAlignment="Center" Fill="{StaticResource DefaultTabForegroundColorBrush}">

                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                    </Path.RenderTransform>
                </Path>
            </Button.Content>
        </Button>

        <!--Additional aligment options popup-->
        <Popup IsOpen="{Binding IsAdditionalAlignOptionVisible}"
               PlacementTarget="{x:Reference Name=additionalAlignOptionsButton}"
               Placement="Bottom"
               StaysOpen="False"
               PopupAnimation="Slide"
               AllowsTransparency="True"
               VerticalOffset="10"
               >

            <Grid
                Background="{StaticResource DefaultTabBackgroundColorBrush}"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--Indent/Outdent buttons-->
                <StackPanel 
                    Orientation="Horizontal" 
                    Grid.Row="0"
                        >

                    <!--Indent-->
                    <Button
                        Style="{StaticResource IconButton}"
                        Padding="8"
                        Command="EditingCommands.IncreaseIndentation"
                        CommandTarget="{Binding ActionTarget, ElementName=control}"
                        Content="{StaticResource FontAwesomeIndent}"/>

                    <!--Outdent-->
                    <Button
                        Style="{StaticResource IconButton}"
                        Padding="8"
                        Command="EditingCommands.DecreaseIndentation"
                        CommandTarget="{Binding ActionTarget, ElementName=control}"
                        Content="{StaticResource FontAwesomeOutdent}"/>

                </StackPanel>

                <StackPanel Orientation="Vertical"
                            Grid.Row="1">

                    <!--Spacing label-->
                    <Label Content="Line spacing"
                           HorizontalAlignment="Center"/>

                    <!--Spacing-->
                    <ComboBox
                        IsEditable="True"
                        SelectedIndex="0"
                        SelectedItem="{Binding SelectedSpacing}"
                        ItemsSource="{Binding SpacingOptions}"
                        >
                    </ComboBox>

                </StackPanel>

            </Grid>
        </Popup>

        <!--Separator-->
        <Border 
            Style="{StaticResource Separator}"
            Grid.Column="1"
            Background="{Binding Foreground, ElementName=firstIcon}"
            />

        <!--Bullets-->
        <Button 
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeDotedList}"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            ToolTip="Dotted list"
            Command="EditingCommands.ToggleBullets"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

        <!--Numeric list-->
        <Button 
            Style="{StaticResource IconButton}"
            Content="{StaticResource FontAwesomeNumberList}"
            Foreground="{Binding Foreground, ElementName=firstIcon}"
            ToolTip="Numeric list"
            Command="EditingCommands.ToggleNumbering"
            CommandTarget="{Binding ActionTarget, ElementName=control}"
            />

    </StackPanel>


    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="{StaticResource OpacityForUnabledControl}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

</UserControl>
